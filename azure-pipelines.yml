# dapr/dotnet-sdk pipeline

trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*
variables:
    - group: ExtenFlow
stages:
- stage: Build
  jobs:
  - job: 'build_projects'
    pool:
      vmImage: 'windows-2019'
    strategy:
      maxParallel: 2
      matrix:
        debug:
          configuration: debug
        release:
          configuration: release
    steps:
      - task: UseDotNet@2
        displayName: 'Install dotnet SDK 3.1'
        inputs:
          packageType: sdk
          version: 3.1.201
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: DotNetCoreCLI@2
        displayName: 'Build solution - $(Configuration)'
        inputs:
          command: 'build'
          arguments: '--configuration $(Configuration)'
          projects: 'ExtenFlow/ExtenFlow.sln'
      - task: DotNetCoreCLI@2
        displayName: 'Test - $(Configuration)'
        inputs:
          command: 'test'
          arguments: '--configuration $(Configuration)'
          projects: 'ExtenFlow/ExtenFlow.sln'      
      - task: DotNetCoreCLI@2
        displayName: 'Pack - $(Configuration)'
        inputs:
          command: 'pack'
          arguments: '--configuration $(Configuration)'
          packagesToPack: 'ExtenFlow/ExtenFlow.sln'
          nobuild: true
          versioningScheme: 'off'
      - task: NuGetCommand@2
        displayName: 'Publish nuget package to latest feed'
        condition: and(eq(variables['Configuration'], 'release'), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: 'ExtenFlow/ExtenFlow'
          allowPackageConflicts: true     
      - task: NuGetCommand@2
        displayName: 'Publish nuget package to stable feed'
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
          feedsToUse: 'config'
          nuGetFeedType: 'external'
          nugetConfigPath: 'nuget.config'
          includeNugetOrg: 'true'         
          arguments: '-ApiKey $(NugetApiKey) -NonInteractive -Source https://www.nuget.org/api/v3/package'
      - task: CopyFiles@2
        condition: ne(variables['Build.Reason'], 'PullRequest')
        inputs:
          SourceFolder: 'ExtenFlow/bin/$(Configuration)'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish binaries to artifact'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: '$(Configuration)_drop'
          publishLocation: 'Container'
      - task: CmdLine@2
        displayName: 'Add release tag for release branch'
        condition: and(eq(variables['Configuration'], 'release'), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
        inputs:
          script: 'echo "##vso[build.addbuildtag]release'
          workingDirectory: '$(Build.ArtifactStagingDirectory)'